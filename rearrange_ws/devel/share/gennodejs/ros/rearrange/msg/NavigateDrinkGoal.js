// Auto-generated. Do not edit!

// (in-package rearrange.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class NavigateDrinkGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.drink_name = null;
      this.target_x = null;
      this.target_y = null;
      this.target_orientation_z = null;
      this.target_orientation_w = null;
    }
    else {
      if (initObj.hasOwnProperty('drink_name')) {
        this.drink_name = initObj.drink_name
      }
      else {
        this.drink_name = '';
      }
      if (initObj.hasOwnProperty('target_x')) {
        this.target_x = initObj.target_x
      }
      else {
        this.target_x = 0.0;
      }
      if (initObj.hasOwnProperty('target_y')) {
        this.target_y = initObj.target_y
      }
      else {
        this.target_y = 0.0;
      }
      if (initObj.hasOwnProperty('target_orientation_z')) {
        this.target_orientation_z = initObj.target_orientation_z
      }
      else {
        this.target_orientation_z = 0.0;
      }
      if (initObj.hasOwnProperty('target_orientation_w')) {
        this.target_orientation_w = initObj.target_orientation_w
      }
      else {
        this.target_orientation_w = 0.0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type NavigateDrinkGoal
    // Serialize message field [drink_name]
    bufferOffset = _serializer.string(obj.drink_name, buffer, bufferOffset);
    // Serialize message field [target_x]
    bufferOffset = _serializer.float32(obj.target_x, buffer, bufferOffset);
    // Serialize message field [target_y]
    bufferOffset = _serializer.float32(obj.target_y, buffer, bufferOffset);
    // Serialize message field [target_orientation_z]
    bufferOffset = _serializer.float32(obj.target_orientation_z, buffer, bufferOffset);
    // Serialize message field [target_orientation_w]
    bufferOffset = _serializer.float32(obj.target_orientation_w, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type NavigateDrinkGoal
    let len;
    let data = new NavigateDrinkGoal(null);
    // Deserialize message field [drink_name]
    data.drink_name = _deserializer.string(buffer, bufferOffset);
    // Deserialize message field [target_x]
    data.target_x = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [target_y]
    data.target_y = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [target_orientation_z]
    data.target_orientation_z = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [target_orientation_w]
    data.target_orientation_w = _deserializer.float32(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += _getByteLength(object.drink_name);
    return length + 20;
  }

  static datatype() {
    // Returns string type for a message object
    return 'rearrange/NavigateDrinkGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '60af8d6775a7d74b1f37c4f2a62945fb';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Goal
    string drink_name
    float32 target_x
    float32 target_y
    float32 target_orientation_z
    float32 target_orientation_w
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new NavigateDrinkGoal(null);
    if (msg.drink_name !== undefined) {
      resolved.drink_name = msg.drink_name;
    }
    else {
      resolved.drink_name = ''
    }

    if (msg.target_x !== undefined) {
      resolved.target_x = msg.target_x;
    }
    else {
      resolved.target_x = 0.0
    }

    if (msg.target_y !== undefined) {
      resolved.target_y = msg.target_y;
    }
    else {
      resolved.target_y = 0.0
    }

    if (msg.target_orientation_z !== undefined) {
      resolved.target_orientation_z = msg.target_orientation_z;
    }
    else {
      resolved.target_orientation_z = 0.0
    }

    if (msg.target_orientation_w !== undefined) {
      resolved.target_orientation_w = msg.target_orientation_w;
    }
    else {
      resolved.target_orientation_w = 0.0
    }

    return resolved;
    }
};

module.exports = NavigateDrinkGoal;
